#!/usr/bin/env zsh
# -*- vim:fenc=utf-8:et:sw=2:ts=2:sts=2
#
# Copyright (c) 2018 Enrico M. Crisostomo
#
# This program is free software; you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation; either version 3, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
# FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
# details.
#
# You should have received a copy of the GNU General Public License along with
# this program.  If not, see <http://www.gnu.org/licenses/>.
#
setopt local_options
setopt local_traps
unsetopt glob_subst
unsetopt bash_rematch

set -o errexit
set -o nounset
set -o pipefail

PROGNAME=${0:t}
PROGDIR=${0:h}
BUG_REPORT=@PACKAGE_BUGREPORT@
PACKAGE_VERSION=@PACKAGE_VERSION@
typeset -a help_flag
typeset -a verbose_flag
typeset -a version_flag
VERBOSE_PRINT=:
REQUIRED_PROGS=( curl jq )

function gac_check_required_programs()
{
  for p in ${REQUIRED_PROGS}
  do
    command -v ${p} > /dev/null 2>&1 ||
      {
        >&2 print -- Cannot find required program: ${p}
        exit 1
      }
  done
}

print_version()
{
  print -- "${PROGNAME} ${PACKAGE_VERSION}"
  print -- "Copyright (C) 2018 Enrico M. Crisostomo"
  print -- "License GPLv3+: GNU GPL version 3 or later <http://gnu.org/licenses/gpl.html>."
  print -- "This is free software: you are free to change and redistribute it."
  print -- "There is NO WARRANTY, to the extent permitted by law."
  print
  print -- "Written by Enrico M. Crisostomo"
}

print_usage()
{
  print -- "${PROGNAME} ${PACKAGE_VERSION}"
  print
  print -- "Usage:"
  print -- "${PROGNAME} (options)* (path)*"
  print -- "${PROGNAME} -h"
  print -- "${PROGNAME} -v"
  print
  print -- "Options:"
  print -- " -h, --help     Print this message."
  print -- " -v, --verbose  Print verbose output."
  print -- "     --version  Print the program version."
  print
  print -- "See the man page for more information."
  print
  print -- "Report bugs to <https://github.com/emcrisostomo/github-api-client/issues>."
  print -- "${PROGNAME} home page: <https://github.com/emcrisostomo/github-api-client>."
}

parse_opts()
{
  while getopts ":" opt
  do
    case $opt in
      \?)
        >&2 print -- Invalid option -${OPTARG}.
        exit 1
        ;;
    esac
  done

  ARGS_PROCESSED=$((OPTIND - 1))
}

# main
zparseopts -D \
           h=help_flag    -help=help_flag         \
           v=verbose_flag -verbose=verbose_flag   \
                          -version=version_flag

if (( ${+help_flag[1]} > 0 ))
then
  print_usage
  exit 0
fi

if (( ${+version_flag[1]} > 0 ))
then
  print_version
  exit 0
fi

(( ${+verbose_flag[1]} > 0 )) && VERBOSE_PRINT=print

parse_opts $* && shift ${ARGS_PROCESSED}

(( $# == 0 )) ||
  {
    >&2 print "No arguments allowed."
    exit 2
  }

# Local variables:
# coding: utf-8
# mode: sh
# eval: (sh-set-shell "zsh")
# tab-width: 2
# indent-tabs-mode: nil
# sh-basic-offset: 2
# sh-indentation: 2
# End:
